{"version":3,"sources":["helpers/getUser.js","Components/Chatroom.jsx","helpers/deleteUser.js","Components/Login.jsx","App.js","serviceWorker.js","index.js","data/users.js","assets/tabchat-logo.png"],"names":["getUser","curUser","JSON","parse","sessionStorage","getItem","undefined","Users","find","user","id","parseInt","Chat","posed","div","open","x","delayChildren","staggerChildren","Message","y","opacity","closed","Chatroom","_useState","useState","_useState2","Object","slicedToArray","msg","setMsg","_useState3","localStorage","_useState4","theChat","setChat","_useState5","_useState6","isOpen","setisOpen","handleStorageEvent","setItem","stringify","useEffect","window","addEventListener","setTimeout","removeEventListener","react_default","a","createElement","className","src","Logo","alt","style","backgroundImage","img","displayName","onClick","removeItem","location","href","pose","map","index","key","length","onSubmit","e","preventDefault","entry","target","value","timeStamp","Date","push","type","onChange","disabled","Redirect","to","loggedIn","Login","setUser","error","setError","userSet","setUserSet","react","userIndex","findIndex","userName","toLowerCase","console","log","require","config","App","HashRouter","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"yQAEO,SAASA,IACd,IAAMC,EAAUC,KAAKC,MAAMC,eAAeC,QAAQ,kBAAeC,EACjE,QAAgBA,IAAZL,EACF,OAAOM,QAAMC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAOC,SAASV,EAAS,0BCItDQ,EAAOT,IAEPY,EAAOC,IAAMC,IAAI,CACrBC,KAAM,CACJC,EAAG,KACHC,cAAe,IACfC,gBAAiB,MAIfC,EAAUN,IAAMC,IAAI,CACxBC,KAAM,CACJK,EAAG,EACHC,QAAS,GAEXC,OAAQ,CACNF,EAAG,GACHC,QAAS,KAoGEE,EA/FE,WAAM,IAAAC,EACCC,mBAAS,IADVC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACdK,EADcH,EAAA,GACTI,EADSJ,EAAA,GAAAK,EAEIN,mBAASvB,KAAKC,MAAM6B,aAAa3B,QAAQ,UAF7C4B,EAAAN,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEhBG,EAFgBD,EAAA,GAEPE,EAFOF,EAAA,GAAAG,EAGKX,oBAAS,GAHdY,EAAAV,OAAAC,EAAA,EAAAD,CAAAS,EAAA,GAGhBE,EAHgBD,EAAA,GAGRE,EAHQF,EAAA,GAkBfG,EAAqB,WACzBL,EAAQjC,KAAKC,MAAM6B,aAAa3B,QAAQ,WAU3C,OAPe,MAAX6B,IAEDA,EAAU,GACVF,aAAaS,QAAQ,OAAQvC,KAAKwC,UAAUR,IAC5CM,KAGE/B,GAIJkC,oBACE,WAKE,OAJAC,OAAOC,iBAAiB,UAAWL,GACnCM,WAAW,WACTP,GAAU,IACT,KACI,WACLK,OAAOG,oBAAoB,UAAWP,MAM1CQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAMC,IAAI,SACpBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWI,MAAO,CAACC,gBAAiB,OAAS/C,EAAKgD,IAAM,OACvET,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAIzC,EAAKiD,aACTV,EAAAC,EAAAC,cAAA,QAAMS,QAAS,kBCpFzBvD,eAAewD,WAAW,WACnBhB,OAAOiB,SAASC,KAAO,MDmFpB,cAKNd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACtC,EAAD,CAAMuC,UAAU,OAAOY,KAAMzB,EAAS,OAAS,UAE5CJ,EAAQ8B,IAAI,SAACnC,EAAKoC,GACjB,OACEjB,EAAAC,EAAAC,cAAC/B,EAAD,CAASgC,UAAW,QAAU1C,EAAKC,KAAOmB,EAAIpB,KAAKC,GAAK,MAAQ,IAAKwD,IAAKD,GACxEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKI,IAAI,UAAUF,IAAKvB,EAAIpB,KAAKgD,OAEnCT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZtB,EAAIA,QAMQ,IAAnBK,EAAQiC,OACRnB,EAAAC,EAAAC,cAAC/B,EAAD,CAASgC,UAAU,SAAnB,eACE,OAKRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,QAAMkB,SA9EO,SAACC,GAClBA,EAAEC,iBACF,IAAIC,EAAQ,CACV9D,OACAoB,IAAKwC,EAAEG,OAAO,GAAGC,MACjBC,UAAW,IAAIC,MAGjBzC,EAAQ0C,KAAKL,GACbvC,aAAaS,QAAQ,OAAQvC,KAAKwC,UAAUR,IAC5CJ,EAAO,MAqEDkB,EAAAC,EAAAC,cAAA,SAAOuB,MAAO5C,EACNgD,KAAK,OACLC,SAAU,SAAAT,GAAC,OAAIvC,EAAOuC,EAAEG,OAAOC,UACvCzB,EAAAC,EAAAC,cAAA,SAAO6B,SAAyB,IAAflD,EAAIsC,OAAcU,KAAK,SAASJ,MAAM,eAzD/DzB,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAUC,GAAI,YEtDVC,EAAWlF,IA8DFmF,EA5DD,WAAM,IAAA3D,EACMC,mBAAS,IADfC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACXf,EADWiB,EAAA,GACL0D,EADK1D,EAAA,GAAAK,EAEQN,mBAAS,IAFjBQ,EAAAN,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEXsD,EAFWpD,EAAA,GAEJqD,EAFIrD,EAAA,GAAAG,EAGYX,oBAAS,GAHrBY,EAAAV,OAAAC,EAAA,EAAAD,CAAAS,EAAA,GAGXmD,EAHWlD,EAAA,GAGFmD,EAHEnD,EAAA,GA2BlB,OAAI6C,EACOlC,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAUC,GAAI,MAIvBjC,EAAAC,EAAAC,cAACuC,EAAA,SAAD,KACEzC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YAAeoC,EAAU,SAAW,KAClDvC,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAMC,IAAI,UAGtBN,EAAAC,EAAAC,cAAA,OAAKC,UAAW,eAAkBoC,EAAU,SAAW,KACrDvC,EAAAC,EAAAC,cAAA,wBAAeF,EAAAC,EAAAC,cAAA,yBACfF,EAAAC,EAAAC,cAAA,sDAA6CF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,iFAElDF,EAAAC,EAAAC,cAAA,QAAMkB,SAnCO,SAACC,GAClBA,EAAEC,iBACF,IAAMoB,EAAYnF,QAAMoF,UAAU,SAAAlF,GAAI,OAAIA,EAAKmF,SAASC,gBAAkBxB,EAAEG,OAAO,GAAGC,SACnE,IAAfiB,GACFF,GAAW,GACXpF,eAAeqC,QAAQ,UAAWvC,KAAKwC,UAAUnC,QAAMmF,GAAWhF,KAElEoC,WAAW,WAKPgD,QAAQC,IAAI,eACZnD,OAAOiB,SAASC,KAAO,eAExB,OAEHwB,EAAS,kBAmBLtC,EAAAC,EAAAC,cAAA,OAAKC,UAAakC,EAAa,QAAL,IACxBrC,EAAAC,EAAAC,cAAA,SAAO2B,KAAM,OACLC,SAAU,SAACT,GACTe,EAAQf,EAAEG,OAAOC,OACjBa,EAAS,KAEXb,MAAOhE,IACfuC,EAAAC,EAAAC,cAAA,SAAImC,IAENrC,EAAAC,EAAAC,cAAA,SAAO2B,KAAK,SAASJ,MAAM,qBCpDrCuB,EAAQ,IAAUC,SAeHC,MAbf,WACE,OACElD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,KACEnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhF,IACjCyB,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWpB,QCJ5BqB,QACW,cAA7B5D,OAAOiB,SAAS4C,UAEe,UAA7B7D,OAAOiB,SAAS4C,UAEhB7D,OAAOiB,SAAS4C,SAASC,MACvB,2DCZNC,IAASC,OAAO5D,EAAAC,EAAAC,cAAC2D,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gCEnInBC,EAAOC,QAAU,CACfhH,MAAO,CACL,CACEG,GAAI,EACJkF,SAAU,UACVlC,YAAa,WACbD,IAAK,qDACJ,CACD/C,GAAI,EACJkF,SAAU,UACVlC,YAAa,WACbD,IAAK,uDACJ,CACD/C,GAAI,EACJkF,SAAU,SACVlC,YAAa,UACbD,IAAK,0EChBX6D,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.9f7ff49f.chunk.js","sourcesContent":["import { Users } from '../data/users';\r\n\r\nexport function getUser() {\r\n  const curUser = JSON.parse(sessionStorage.getItem('curUser')) || undefined;\r\n  if (curUser !== undefined) {\r\n    return Users.find(user => user.id === parseInt(curUser, 10));\r\n  }\r\n\r\n  return undefined;\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport posed from 'react-pose';\r\n\r\nimport { getUser } from '../helpers/getUser';\r\nimport { deleteUser } from '../helpers/deleteUser';\r\n\r\nimport Logo from '../assets/tabchat-logo.png';\r\n\r\nconst user = getUser();\r\n\r\nconst Chat = posed.div({\r\n  open: {\r\n    x: '0%',\r\n    delayChildren: 200,\r\n    staggerChildren: 50\r\n  }\r\n});\r\n\r\nconst Message = posed.div({\r\n  open: { \r\n    y: 0, \r\n    opacity: 1 \r\n  },\r\n  closed: { \r\n    y: 20, \r\n    opacity: 0\r\n    }\r\n});\r\n\r\n\r\nconst Chatroom = () => {\r\n  const [msg, setMsg] = useState('');\r\n  let [theChat, setChat] = useState(JSON.parse(localStorage.getItem(\"chat\")));\r\n  let [isOpen, setisOpen] = useState(false);\r\n\r\n  const handleForm = (e) => {\r\n    e.preventDefault();\r\n    let entry = {\r\n      user,\r\n      msg: e.target[0].value,\r\n      timeStamp: new Date()\r\n    };\r\n\r\n    theChat.push(entry);\r\n    localStorage.setItem('chat', JSON.stringify(theChat));\r\n    setMsg('');\r\n  };\r\n\r\n  const handleStorageEvent = () => {\r\n    setChat(JSON.parse(localStorage.getItem(\"chat\")));\r\n  }\r\n\r\n  if(theChat == null) {\r\n    // Setting an empty array using setChat doesn't seem to be working, that's why...\r\n    theChat = [];\r\n    localStorage.setItem('chat', JSON.stringify(theChat));\r\n    handleStorageEvent();\r\n  }\r\n\r\n\tif (!user) return (\r\n\t\t<Redirect to={\"/login\"} />\r\n\t);\r\n\r\n  useEffect(\r\n    () => {\r\n      window.addEventListener('storage', handleStorageEvent)\r\n      setTimeout(function() {\r\n        setisOpen(true);\r\n      }, 500)\r\n      return () => {\r\n        window.removeEventListener('storage', handleStorageEvent)\r\n      }\r\n    }\r\n  )\r\n\r\n\treturn (\r\n    <div className=\"chatroom\">\r\n\r\n      <div className=\"topbar\">\r\n        <img src={Logo} alt=\"logo\"/>\r\n        <div className=\"menu\">\r\n          <div className=\"user-img\" style={{backgroundImage: 'url(' + user.img + ')'}}/>\r\n          <div>\r\n            <p>{user.displayName}</p>\r\n            <span onClick={() => deleteUser()}>Log out</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-container\">\r\n        <Chat className=\"chat\" pose={isOpen ? 'open' : 'closed'}>\r\n\r\n          {theChat.map((msg, index) => {\r\n            return (\r\n              <Message className={\"msg \" + (user.id === msg.user.id ? 'cur' : '')} key={index}>\r\n                <div className=\"userimg\">\r\n                  <img alt=\"userimg\" src={msg.user.img}/>\r\n                </div>\r\n                <div className=\"content\">\r\n                  {msg.msg}\r\n                </div>\r\n              </Message>\r\n            )\r\n          })}\r\n\r\n          { theChat.length === 0 ? (\r\n            <Message className=\"nomsg\">No messages</Message>\r\n          ) : null }\r\n\r\n        </Chat>\r\n      </div>\r\n\r\n      <div className=\"submitform\">\r\n        <form onSubmit={handleForm}>\r\n          <input value={msg}\r\n                  type='text'\r\n                  onChange={e => setMsg(e.target.value)} />\r\n          <input disabled={msg.length === 0} type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      </div>\r\n      \r\n    </div>\r\n\t);\r\n}\r\n\r\nexport default Chatroom;\r\n","export function deleteUser() {\r\n  sessionStorage.removeItem('curUser');\r\n  return window.location.href = \"/\";\r\n}","import React, { useState, Fragment } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { getUser } from '../helpers/getUser'; \r\nimport { Users } from '../data/users';\r\nimport Logo from '../assets/tabchat-logo.png';\r\n\r\nconst loggedIn = getUser();\r\n\r\nconst Login = () => {\r\n  const [user, setUser] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [userSet, setUserSet] = useState(false);\r\n  const isDev = process.env.NODE_ENV === 'development';\r\n\r\n  const handleForm = (e) => {\r\n    e.preventDefault();\r\n    const userIndex = Users.findIndex(user => user.userName.toLowerCase() === e.target[0].value);\r\n    if (userIndex !== -1) {\r\n      setUserSet(true);\r\n      sessionStorage.setItem('curUser', JSON.stringify(Users[userIndex].id) );\r\n\r\n      setTimeout(() => {\r\n        if (isDev) {\r\n          console.log('/');\r\n          window.location.href = \"/\";\r\n        } else {\r\n          console.log('/tabchat/#/');\r\n          window.location.href = \"/tabchat/#/\";\r\n        }\r\n      }, 1500);\r\n    } else {\r\n      setError('Unknown user');\r\n    }\r\n  };\r\n\r\n  if (loggedIn) {\r\n    return ( <Redirect to={\"/\"} /> )\r\n  }\r\n\r\n\treturn (\r\n    <Fragment>\r\n      <div className={'welcome ' + ( userSet ? 'active' : '')}>\r\n        <img src={Logo} alt=\"logo\" />\r\n      </div>\r\n\r\n      <div className={\"login-form \" + ( userSet ? 'remove' : '')}>\r\n        <h2>Welcome to <span>Tabchat!</span></h2>\r\n        <p>Please enter your username to get started <br/><span>(It's probably something like \"johndoe\", \"jimdoe\" or \"janedoe\")</span></p>\r\n\r\n        <form onSubmit={handleForm}>\r\n          <div className={(!error ? '' : 'error')}>\r\n            <input type={'text'}\r\n                    onChange={(e) => {\r\n                      setUser(e.target.value)\r\n                      setError('')\r\n                    }}\r\n                    value={user} />\r\n            <p>{error}</p>\r\n          </div>\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n\r\n      </div>\r\n\r\n    </Fragment>\r\n\t);\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport Chatroom from './Components/Chatroom'\nimport Login from './Components/Login'\n\nimport './styles/main.scss';\n\nrequire('dotenv').config();\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"page\">\n        <div className=\"pagecontainer\">\n          <Route exact path=\"/\" component={Chatroom} />\n          <Route exact path=\"/login\" component={Login} />\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  Users: [\n    {\n      id: 1,\n      userName: 'johndoe',\n      displayName: 'John Doe',\n      img: 'https://d3iw72m71ie81c.cloudfront.net/male-44.jpg',\n    }, {\n      id: 2,\n      userName: 'janedoe',\n      displayName: 'Jane Doe',\n      img: 'https://d3iw72m71ie81c.cloudfront.net/female-44.jpg',\n    }, {\n      id: 3,\n      userName: 'jimdoe',\n      displayName: 'Jim Doe',\n      img: 'https://d3iw72m71ie81c.cloudfront.net/male-43.jpg',\n    }\n  ]\n};","module.exports = __webpack_public_path__ + \"static/media/tabchat-logo.57a052e3.png\";"],"sourceRoot":""}